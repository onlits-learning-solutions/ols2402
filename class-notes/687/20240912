
	1 to 1000000000
	
	h^2 = b^2 + p^2
	
	Algorithm Efficiency
	
	Linear Search
	
	Best Case		-	1 attempt
	Worse Case		-	Did not found
	
	Paul Bachman
	Big O notation
	
	f(x)	=	x^2 + 3x
	
	O(n)	=	1		=	O(1)

	O(n)	=	log n	=	O(log n)	-	Binary search	

	O(n)	=	n		=	O(n)	-	Linear search
	
	O(n)	=	n log n	=	O(log n) -	Merge Sort
	
	O(n)	=	n^2		=	O(n^2)	-	Selection Sort
	

	
	Rate of growth
	
	2^3	=	8
	
	log (2) 8	=	3
	log (2) 16	=	4
	log (2) 32	=	5
	log (2) 64	=	6
	log (2) 100 =	6.x	=	7
	log (2) 128	=	7
